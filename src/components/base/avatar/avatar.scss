// Available background colors for the identicon fallback for avatars
//
// Purple is duplicated on purpose. We have replaced indigo with it.
// If we had simply removed it, the total number of colors would have
// changed, resulting in changing the color of all identicons, because
// we do a modulo division with the total number of colors on the
// object's id to always give it the same "random" color.
$gl-avatar-identicon-bgs: var(--gl-avatar-fallback-background-color-red),
  var(--gl-avatar-fallback-background-color-purple),
  var(--gl-avatar-fallback-background-color-purple), var(--gl-avatar-fallback-background-color-blue),
  var(--gl-avatar-fallback-background-color-green),
  var(--gl-avatar-fallback-background-color-orange),
  var(--gl-avatar-fallback-background-color-neutral);

@mixin gl-avatar {
  @include gl-display-inline-flex;
  @include gl-overflow-hidden;
  @include gl-flex-shrink-0;
  @include gl-line-height-ratio-1000;
  @include gl-object-fit-contain;
  outline: 1px solid var(--gl-avatar-border-color-default);
  outline-offset: -1px;
}

@mixin gl-avatar-s16 {
  @include gl-w-5;
  @include gl-h-5;
  font-size: map-get($gl-font-sizes, 100);
  @include gl-rounded-small;
}

@mixin gl-avatar-s24 {
  @include gl-w-6;
  @include gl-h-6;
  font-size: map-get($gl-font-sizes, 400);
  @include gl-rounded-base;
}

@mixin gl-avatar-s32 {
  @include gl-w-7;
  @include gl-h-7;
  font-size: map-get($gl-font-sizes, 500);
  @include gl-rounded-base;
}

@mixin gl-avatar-s48 {
  @include gl-w-9;
  @include gl-h-9;
  font-size: map-get($gl-font-sizes, 600);
  @include gl-rounded-lg;
}

@mixin gl-avatar-s64 {
  @include gl-w-11;
  @include gl-h-11;
  font-size: map-get($gl-font-sizes, 700);
  @include gl-rounded-lg;
}

@mixin gl-avatar-s96 {
  @include gl-w-13;
  @include gl-h-13;
  font-size: map-get($gl-font-sizes, 800);
  @include gl-rounded-lg;
}

.gl-avatar {
  @include gl-avatar;
}

.gl-avatar-s16 {
  @include gl-avatar-s16;
}

.gl-avatar-s24 {
  @include gl-avatar-s24;
}

.gl-avatar-s32 {
  @include gl-avatar-s32;
}

.gl-avatar-s48 {
  @include gl-avatar-s48;
}

.gl-avatar-s64 {
  @include gl-avatar-s64;
}

.gl-avatar-s96 {
  @include gl-avatar-s96;
}

.gl-sm-avatar-s16 {
  @include gl-media-breakpoint-up(sm) {
    @include gl-avatar-s16;
  }
}

.gl-md-avatar-s16 {
  @include gl-media-breakpoint-up(md) {
    @include gl-avatar-s16;
  }
}

.gl-lg-avatar-s16 {
  @include gl-media-breakpoint-up(lg) {
    @include gl-avatar-s16;
  }
}

.gl-sm-avatar-s24 {
  @include gl-media-breakpoint-up(sm) {
    @include gl-avatar-s24;
  }
}

.gl-md-avatar-s24 {
  @include gl-media-breakpoint-up(md) {
    @include gl-avatar-s24;
  }
}

.gl-lg-avatar-s24 {
  @include gl-media-breakpoint-up(lg) {
    @include gl-avatar-s24;
  }
}

.gl-sm-avatar-s32 {
  @include gl-media-breakpoint-up(sm) {
    @include gl-avatar-s32;
  }
}

.gl-md-avatar-s32 {
  @include gl-media-breakpoint-up(md) {
    @include gl-avatar-s32;
  }
}

.gl-lg-avatar-s32 {
  @include gl-media-breakpoint-up(lg) {
    @include gl-avatar-s32;
  }
}

.gl-sm-avatar-s48 {
  @include gl-media-breakpoint-up(sm) {
    @include gl-avatar-s48;
  }
}

.gl-md-avatar-s48 {
  @include gl-media-breakpoint-up(md) {
    @include gl-avatar-s48;
  }
}

.gl-lg-avatar-s48 {
  @include gl-media-breakpoint-up(lg) {
    @include gl-avatar-s48;
  }
}

.gl-sm-avatar-s64 {
  @include gl-media-breakpoint-up(sm) {
    @include gl-avatar-s64;
  }
}

.gl-md-avatar-s64 {
  @include gl-media-breakpoint-up(md) {
    @include gl-avatar-s64;
  }
}

.gl-lg-avatar-s64 {
  @include gl-media-breakpoint-up(lg) {
    @include gl-avatar-s64;
  }
}

.gl-sm-avatar-s96 {
  @include gl-media-breakpoint-up(sm) {
    @include gl-avatar-s96;
  }
}

.gl-md-avatar-s96 {
  @include gl-media-breakpoint-up(md) {
    @include gl-avatar-s96;
  }
}

.gl-lg-avatar-s96 {
  @include gl-media-breakpoint-up(lg) {
    @include gl-avatar-s96;
  }
}

.gl-avatar-circle {
  @include gl-rounded-full;
}

.gl-avatar-identicon {
  @include gl-text-center;
  @include gl-vertical-align-top;
  @include gl-justify-content-center;
  @include gl-align-items-center;
  color: var(--gl-text-color-strong);
}

// Background colors
@for $i from 1 through length($gl-avatar-identicon-bgs) {
  .gl-avatar-identicon-bg#{$i} {
    background-color: nth($gl-avatar-identicon-bgs, $i);
  }
}
