$label-max-width: 100%;
$label-close-button: '.gl-label-close.gl-button';
$label-padding-vertical: $gl-spacing-scale-1;
$label-padding-horizontal: 0.75 * $grid-size;
$label-padding-horizontal-half: 0.375 * $grid-size;

.gl-label {
  --label-border-lightness: min(var(--l), 80);
  --label-background-color: hsla(var(--h), calc(var(--s) * 1%), calc(var(--l) * 1%));
  --label-border-color: hsl(var(--h), calc(var(--s) * 1%), calc(var(--label-border-lightness) * 1%));

  .gl-dark & {
    --label-text-lightness: max(var(--l), 80);
    --label-background-lightness: max(var(--l), 32);
    --label-border-lightness: max(var(--l), 64);
    --label-text-color: hsl(var(--h), calc(var(--s) * 1%), calc(var(--label-text-lightness) * 1%));
    --label-background-color: hsla(var(--h), calc(var(--s) * 1%), calc(var(--label-background-lightness) * 1%), 0.24);
    --label-border-color: hsla(var(--h), calc(var(--s) * 1%), calc(var(--label-border-lightness) * 1%), 0.5);
  }

  @include gl-align-items-center;
  color: var(--label-text-color);
  background-color: var(--gl-background-color-default);
  @include gl-overflow-hidden;
  @include gl-display-inline-flex;
  @include gl-rounded-pill;
  position: relative;
  @include gl-max-w-full;
  @include gl-font-sm;
  @include gl-line-height-normal;
  box-shadow: inset 0 0 0 1px var(--label-border-color);

  @media (forced-colors: active) {
    border: 1px solid; // stylelint-disable-line declaration-property-value-disallowed-list
  }

  &:not(.gl-label-scoped) {
    background-color: var(--label-background-color);
  }

  &:has(*:first-child:focus) {
    @include gl-focus($color: var(--label-background-color, var(--gl-background-color-default)), $important: true);
  }

  .gl-label-link {
    @include gl-display-flex;
    @include gl-font-weight-normal;
    @include gl-overflow-hidden;
    @include gl-reset-color;
    @include gl-max-w-full;

    &:hover,
    &:focus,
    &:focus:active {
      @include gl-reset-color;
      @include gl-shadow-none;
      @include gl-outline-none;
    }
  }

  .gl-label-link-underline {
    text-decoration: none;

    &:hover,
    &:focus,
    &:focus:active {
      .gl-label-text,
      .gl-label-text-scoped {
        text-decoration: underline;
      }
    }
  }

  .gl-label-text,
  .gl-label-text-scoped {
    @include gl-display-block;
    padding: $label-padding-vertical $label-padding-horizontal;
    @include str-truncated($label-max-width);
  }

  &:not(.gl-label-scoped):has(.gl-icon) {
    @apply gl-pr-5;
  }

  &.gl-label-scoped:has(.gl-icon) .gl-label-text-scoped {
    padding-right: #{$gl-spacing-scale-5 + $gl-spacing-scale-2};
  }

  > #{$label-close-button} {
    @apply gl-border-0;
    @include gl-display-flex;
    width: px-to-rem(14px);
    height: px-to-rem(14px);
    position: absolute;
    right: $label-padding-horizontal-half;
    @include gl-p-0;
    @include gl-rounded-full;
    @include gl-shadow-none;
    color: var(--gl-icon-color-default);
    @apply gl-bg-transparent;

    &:hover,
    &:focus,
    &:active {
      color: var(--gl-label-light-text-color);
      background-color: var(--gl-label-dark-button-background-color-hover);
    }

    &:focus,
    &:active {
      @include gl-focus;
    }

    .gl-icon {
      vertical-align: -1px;
    }
  }
}

// styles for the the light label variant (which uses dark text)
.gl-light .gl-label-text-dark {
  color: var(--gl-label-light-text-color);

  #{$label-close-button} {
    color: var(--gl-label-light-button-icon-color-default);
    background-color: var(--gl-label-light-button-background-color-default);

    &:focus,
    &:hover {
      color: var(--label-background-color);
      background-color: var(--gl-label-light-button-background-color-hover);
    }
  }
}

// styles for the the dark label variant (which uses light text)
.gl-light .gl-label-text-light {
  color: var(--gl-label-dark-text-color);

  #{$label-close-button} {
    color: var(--gl-label-dark-button-icon-color-default);
    background-color: var(--gl-label-dark-button-background-color-default);

    &:focus,
    &:hover {
      color: var(--label-background-color);
      background-color: var(--gl-label-dark-button-background-color-hover);
    }
  }
}

.gl-label.gl-label-scoped {
  #{$label-close-button} {
    margin-left: #{-$label-padding-horizontal};
    color: var(--gl-label-scoped-button-icon-color-default);

    &:focus,
    &:hover {
      color: var(--gl-label-scoped-button-icon-color-hover);
      background-color: var(--gl-label-scoped-button-background-color-hover);
    }
  }

  .gl-label-text {
    background-color: var(--label-background-color);

    @media (forced-colors: active) {
      border-right: 1px solid CanvasText;
    }
  }

  .gl-label-text-scoped {
    color: var(--gl-label-scoped-text-color);
    padding-left: $gl-spacing-scale-2;
    padding-right: $gl-spacing-scale-3;
  }
}

.gl-label-tooltip-title {
  @include gl-display-block;
  @include gl-text-theme-indigo-300;
  @include gl-font-weight-bold;
}
