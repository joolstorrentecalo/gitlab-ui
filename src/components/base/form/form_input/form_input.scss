.gl-form-input,
.gl-form-input.form-control,
.form-control:is([type='search']) {
  @include gl-bg-white;
  @include gl-font-regular;
  @include gl-font-base;
  @include gl-line-height-normal;
  @include gl-h-auto;
  @include gl-text-gray-900;
  @include form-control-focus($ignore-warning: true);
  @include gl-appearance-none;
  padding: calc($gl-spacing-scale-3 - 1px) calc($gl-spacing-scale-4 - 1px);
  border: 1px solid $gray-400;
  transition: color $gl-timing-fast $gl-easing-accelerate,
              box-shadow $gl-timing-fast $gl-easing-accelerate,
              border $gl-timing-fast $gl-easing-accelerate,
              background-color $gl-timing-fast $gl-easing-accelerate;

  &:disabled,
  &:not(.form-control-plaintext):not([type='color']):read-only {
    @include gl-bg-gray-10;
    border: 1px solid $gray-100;
  }

  &:disabled {
    @include gl-cursor-not-allowed;
    @include gl-text-gray-500;
  }

  &:not(.form-control-plaintext):focus {
    @include gl-text-gray-900;
    @include gl-focus-mouse;
  }

  &:not(.form-control-plaintext):focus-visible {
    @include gl-text-gray-900;
    @include gl-focus-keyboard;
  }

  &:not(.form-control-plaintext):focus:active {
    outline: none;
    box-shadow: none !important;
    animation: none;
  }

  &.is-invalid {
    border: 1px solid $red-500;

    &:focus {
      border: 1px solid $red-500;
    }
  }

  &::placeholder {
    @include gl-text-gray-400;
  }

  &.form-control-plaintext {
    @include gl-shadow-none;
  }
}

@each $name, $size in $gl-form-input-sizes {
  .gl-form-input-#{$name} {
    max-width: $size;
  }

  @each $breakpointName, $breakpointSize in $gl-form-input-sizes {
    @if $breakpointName != xs {
      .gl-#{$breakpointName}-form-input-#{$name} {
        @include gl-media-breakpoint-up($breakpointName) {
          max-width: $size;
        }
      }
    }
  }
}
