@mixin gl-tmp-form-checkbox-inline-styles {
  @include gl-mt-1;
  @include gl-ml-0;
  @include gl-align-self-start;
  position: static;
  @include gl-h-auto;
  @include gl-mr-0;
}

.gl-form-checkbox-group {
  @include gl-line-height-normal;
}

.gl-form-checkbox,
.gl-form-radio {
  @include gl-font-base;
  @include gl-line-height-normal;
  color: var(--gl-text-color-default);

  &.form-check {
    @include gl-display-flex;
    @include gl-pl-0;
  }

  &.form-check-inline {
    @include gl-display-inline-flex;
    @include gl-align-items-center;
  }

  .form-check-input {
    @include gl-tmp-form-checkbox-inline-styles;

    &:active,
    &:focus,
    &:focus:active {
      @include gl-focus;
    }
  }

  .form-check-label {
    @include gl-pl-3;
    @include gl-line-height-normal;
  }

  .form-check-input:disabled,
  .form-check-input:disabled ~ .form-check-label,
  .custom-control-input:disabled,
  .custom-control-input:disabled ~ .custom-control-label,
  .custom-control-input:disabled ~ .custom-control-label > .help-text {
    @include gl-cursor-not-allowed;
    color: var(--gl-text-color-disabled);
  }

  &.custom-control {
    @include gl-pl-5;

    .custom-control-input ~ .custom-control-label {
      @include gl-cursor-pointer;
      @include gl-pl-3;
      @include gl-mb-3;

      &::before,
      &::after {
        top: 0;
        left: -$gl-spacing-scale-5;
      }

      &::before {
        background-color: var(--gl-control-background-color-default);
        border-color: var(--gl-control-border-color-default);
        box-shadow: inset 0 0 0 0 var(--gl-control-background-color-selected-default),
                    0 0 transparent, 0 0 transparent;
        @include gl-prefers-reduced-motion-transition;
        transition: background-color $gl-transition-duration-medium $gl-easing-in-cubic,
                    border-color $gl-transition-duration-medium $gl-easing-in-cubic,
                    box-shadow $gl-transition-duration-medium $gl-easing-in-cubic
      }
    }

    .custom-control-input:not(:disabled):hover ~ .custom-control-label::before {
      border-color: var(--gl-control-border-color-hover);
    }

    .custom-control-input:not(:disabled):focus ~ .custom-control-label::before {
      box-shadow: inset 0 0 0 0 var(--gl-control-background-color-selected-default),
                  $focus-ring;
      border-color: var(--gl-control-border-color-focus);
    }

    .custom-control-input:checked  ~ .custom-control-label::before {
      box-shadow: inset 0 0 0 1em var(--gl-control-background-color-selected-default),
                  0 0 transparent, 0 0 transparent;
      border-color: var(--gl-control-border-color-selected-default);

      @media (forced-colors: active) {
        background-color: LinkText; // stylelint-disable-line scale-unlimited/declaration-strict-value
        border-color: LinKText; // stylelint-disable-line scale-unlimited/declaration-strict-value
      }
    }

    .custom-control-input[type='checkbox']:not(:indeterminate) ~ .custom-control-label::after,
    .custom-control-input[type='radio'] ~ .custom-control-label::after {
      scale: 0;
      @include gl-prefers-reduced-motion-transition;
      transition: scale $gl-transition-duration-medium $gl-easing-in-cubic,
                  rotate $gl-transition-duration-medium $gl-easing-in-cubic;
    }

    .custom-control-input[type='checkbox']:checked ~ .custom-control-label::after,
    .custom-control-input[type='radio']:checked ~ .custom-control-label::after {
      scale: 1;
    }

    .custom-control-input[type='checkbox'] ~ .custom-control-label::after {
      background: url('#{$gl-icon-check}') 50% 50% no-repeat, var(--gl-control-indicator-color-selected);
      mask: url('#{$gl-icon-check}') center center no-repeat;
    }

    .custom-control-input[type='checkbox']:indeterminate ~ .custom-control-label::after {
      background: url('#{$gl-icon-indeterminate}') 50% 50% no-repeat, var(--gl-control-indicator-color-selected);
      mask: url('#{$gl-icon-indeterminate}') center center no-repeat;
    }

    .custom-control-input[type='radio'] ~ .custom-control-label::after {
      background: url('#{$gl-icon-radio}') 50% 50% no-repeat, var(--gl-control-indicator-color-selected);
      mask: url('#{$gl-icon-radio}') center center no-repeat;
    }

    .custom-control-input:not(:disabled):checked ~ .custom-control-label:hover,
    .custom-control-input:not(:disabled):hover:checked ~ .custom-control-label {
      &::before  {
        box-shadow: inset 0 0 0 1em var(--gl-control-background-color-selected-hover),
                    0 0 transparent, 0 0 transparent;
        border-color: var(--gl-control-border-color-selected-hover);
      }
    }

    .custom-control-input:not(:disabled):focus:checked ~ .custom-control-label::before {
      box-shadow: inset 0 0 0 1em var(--gl-control-background-color-selected-focus),
                  $focus-ring;
      border-color: var(--gl-control-border-color-selected-focus);
    }

    .custom-control-input:not(:disabled):checked ~ .custom-control-label:hover,
    .custom-control-input:not(:disabled):hover:checked ~ .custom-control-label,
    .custom-control-input:not(:disabled):focus:checked ~ .custom-control-label {
      &::before {
        @media (forced-colors: active) {
          background-color: LinkText; // stylelint-disable-line scale-unlimited/declaration-strict-value
          border-color: LinKText; // stylelint-disable-line scale-unlimited/declaration-strict-value
        }
      }
    }

    &.custom-checkbox {
      .custom-control-input:indeterminate ~ .custom-control-label::before {
        box-shadow: inset 0 0 0 1em var(--gl-control-background-color-selected-default),
                    0 0 transparent, 0 0 transparent;
        border-color: var(--gl-control-border-color-selected-default);

        @media (forced-colors: active) {
          background-color: LinkText; // stylelint-disable-line scale-unlimited/declaration-strict-value
          border-color: LinKText; // stylelint-disable-line scale-unlimited/declaration-strict-value
        }
      }

      .custom-control-input:not(:disabled):indeterminate ~ .custom-control-label:hover::before {
        box-shadow: inset 0 0 0 1em var(--gl-control-background-color-selected-hover),
                    0 0 transparent, 0 0 transparent;
        border-color: var(--gl-control-border-color-selected-hover);
      }

      .custom-control-input:not(:disabled):focus:indeterminate ~ .custom-control-label::before {
        box-shadow: inset 0 0 0 1em var(--gl-control-background-color-selected-focus),
                    $focus-ring;
        border-color: var(--gl-control-border-color-selected-focus);
      }

      .custom-control-input:not(:disabled):indeterminate ~ .custom-control-label:hover::before,
      .custom-control-input:not(:disabled):focus:indeterminate ~ .custom-control-label::before {
        @media (forced-colors: active) {
          background-color: LinkText; // stylelint-disable-line scale-unlimited/declaration-strict-value
          border-color: LinKText; // stylelint-disable-line scale-unlimited/declaration-strict-value
        }
      }
    }

    .custom-control-input:disabled ~ .custom-control-label {
      @include gl-cursor-not-allowed;

      &::before {
        @include gl-pointer-events-auto;
        background-color: var(--gl-control-background-color-disabled);
        border-color: var(--gl-control-border-color-disabled);

        @media (forced-colors: active) {
          opacity: 0.5;
        }
      }
    }

    .custom-control-input:checked:disabled ~ .custom-control-label,
    .custom-control-input[type='checkbox']:indeterminate:disabled ~ .custom-control-label {
      &::before {
        box-shadow: none;
        background-color: var(--gl-control-background-color-disabled);
        border-color: var(--gl-control-border-color-disabled);
      }

      &::after {
        background-image: none;
        background-color: var(--gl-control-indicator-color-disabled);

        /* Ensure state indicators (like the checkmark for checked or
          the dash for indeterminate) are visible in Windows High
          Contrast Mode.
        */
        @media screen and (forced-colors: active) {
          forced-color-adjust: none;
          /* system color reference for disabled text applied to
            background here.
          */
          // stylelint-disable-next-line
          background-color: GrayText;
        }
      }
    }
  }

  .help-text {
    @include gl-mt-2;
    @include gl-mb-0;
    @include gl-font-base;
    @include gl-line-height-normal;
    color: var(--gl-text-color-subtle);
  }
}
